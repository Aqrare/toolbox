import { ConnectionLibrary } from "../../../networks/connections/connection-library";
import { NetworkName } from "../../../networks/connections/network-connection.types";
import { MappedName } from "../../../tools/name-tools.types";
import { IResolverProvider } from "../../resolver-provider.interface";
import { BaseResolverProvider } from "../base-resolver-provider";
export declare class UDResolverProvider extends BaseResolverProvider implements IResolverProvider {
    constructor(options?: {
        connectionLibrary?: ConnectionLibrary;
    });
    private _resolution;
    generateTokenId(mappedName: MappedName): Promise<string | undefined>;
    getNetworkFromName(mappedName: MappedName): Promise<NetworkName | undefined>;
    getRecords(tokenId: string): Promise<{
        [key: string]: string;
    } | undefined>;
    getNameFromTokenId(tokenId: string, network?: NetworkName | undefined): Promise<string | undefined>;
}
